services:
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "${NGINX_PORT}:80"
      - 443:443
    depends_on:
      - frontend
      - backend
    networks:
      - portfolio-network
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/.well-known/acme-challenge/"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped
  
  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    entrypoint: ""
    command: >
      sh -c "sleep 30 && 
      certbot certonly --webroot -w /var/www/certbot -d ajeshkrishnan.com -d www.ajeshkrishnan.com --email kmajeshkrishnan@gmail.com --agree-tos --non-interactive --force-renewal --dry-run &&
      trap exit TERM; while :; do certbot renew; sleep 12h & wait; done"
    depends_on:
      - nginx
    networks:
      - portfolio-network

  frontend:
    build:
      context: ./portfolio-app
      dockerfile: Dockerfile
    expose:
      - "${ANGULAR_PORT}"
    ports:
      - "${ANGULAR_PORT}:${ANGULAR_PORT}"
    volumes:
      - ./portfolio-app:/app
      - /app/node_modules
    environment:
      - NODE_ENV=${NODE_ENV}
    healthcheck:
      test: ["CMD", "wget", "-q", "-O", "-", "http://localhost:${ANGULAR_PORT}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - portfolio-network

  backend:
    build:
      context: ./portfolio-backend
      dockerfile: Dockerfile
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    expose:
      - "${BACKEND_PORT}"
    volumes:
      - ./portfolio-backend:/app
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    healthcheck:
      test: ["CMD", "wget", "-q", "-O", "-", "http://localhost:${BACKEND_PORT}/docs"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    networks:
      - portfolio-network
    restart: always

volumes:
  nginx_logs:

networks:
  portfolio-network:
    driver: bridge 